<?xml version="1.0" encoding="UTF-8"?>
<TestSet xmlns:stats="http://exist-db.org/xquery/profiling">
    <testName>Lucene indexing tests: analyzers</testName>
    <description>
        <para>Tests for Lucene analyzers</para>
        <author>Wolfgang Meier</author>
    </description>
    <setup>
        <create-collection parent="/db/system" name="config"/>
        <create-collection parent="/db/system/config" name="db"/>
        <create-collection parent="/db/system/config/db" name="lucene"/>
        <store collection="/db/system/config/db/lucene" name="collection.xconf">
            <collection xmlns="http://exist-db.org/collection-config/1.0">
                <index>
                    <!-- Lucene index is configured below -->
                    <lucene>
                        <analyzer class="org.apache.lucene.analysis.standard.StandardAnalyzer"/>
                        <analyzer id="ws" class="org.apache.lucene.analysis.core.WhitespaceAnalyzer"/>
                        <analyzer id="keyword" class="org.apache.lucene.analysis.core.KeywordAnalyzer"/>
                        <analyzer id="de" class="org.apache.lucene.analysis.de.GermanAnalyzer"/>
                        <analyzer id="de-nostop" class="org.apache.lucene.analysis.de.GermanAnalyzer">
                            <param name="stopwords" type="org.apache.lucene.analysis.util.CharArraySet"></param>
                        </analyzer>

                        <text qname="l" field="line" />
                        <text qname="l" analyzer="de">
                            <field name="l_ws" analyzer="ws"/>
                            <field name="l_nostop" analyzer="de-nostop"/>
                        </text>
                        <text field="lineno" qname="@n" analyzer="keyword"/>
                    </lucene>
                </index>
            </collection>
        </store>
        <create-collection parent="/db" name="lucene"/>
        <store collection="/db/lucene" name="text.xml">
                <text>
                    <body>
                        <lg>
                            <l n="l1.1">Habe nun, ach! Philosophie,</l> 
                            <l n="l1.2">Juristerei und Medizin,</l> 
                            <l n="l1.3">Und leider auch Theologie</l> 
                            <l n="l1.4">Durchaus studiert, mit heißem Bemühn.</l> 
                            <l n="l1.5">Da steh ich nun, ich armer Tor!</l> 
                            <l n="l1.6">Und bin so klug als wie zuvor;</l> 
                            <l n="l1.7">Heiße Magister, heiße Doktor gar</l> 
                            <l n="l1.8">Und ziehe schon an die zehen Jahr</l> 
                            <l n="l1.9">Herauf, herab und quer und krumm</l> 
                            <l n="l1.10">Meine Schüler an der Nase herum –</l> 
                            <l n="l1.11">Und sehe, daß wir nichts wissen können!</l> 
                            <l n="l1.12">Das will mir schier das Herz verbrennen.</l>
                        </lg>
                    </body>
                </text>
        </store>
    </setup>
    <tearDown>
        <remove-collection collection="/db/lucene"/>
        <remove-document collection="/db/system/config/db/lucene" name="collection.xconf"/>
    </tearDown>
    <test output="xml">
        <task>German Analyzer: standard search</task>
        <code>doc("/db/lucene/text.xml")//l[ft:query(., 'philosophie')]</code>
        <expected>
            <l n="l1.1">Habe nun, ach! Philosophie,</l>
        </expected>
    </test>
    <test output="xml">
        <task>German Analyzer: stemmed verb</task>
        <code>doc("/db/lucene/text.xml")//l[ft:query(., 'jahre')]</code>
        <expected>
            <l n="l1.8">Und ziehe schon an die zehen Jahr</l>
        </expected>
    </test>
    <test output="xml">
        <task>German Analyzer: plural finds singular</task>
        <code>doc("/db/lucene/text.xml")//l[ft:query(., 'herzen')]</code>
        <expected>
            <l n="l1.12">Das will mir schier das Herz verbrennen.</l>
        </expected>
    </test>
    <test output="xml">
        <task>&lt;query-analyzer-id&gt;de&lt;...</task>
        <code>doc("/db/lucene/text.xml")//l[ft:query(., 'herzen',
            &lt;options&gt;&lt;query-analyzer-id&gt;de&lt;/query-analyzer-id&gt;&lt;/options&gt;
                                                    )]
        </code>
        <expected>
            <l n="l1.12">Das will mir schier das Herz verbrennen.</l>
        </expected>
    </test>
    <test output="xml">
        <task>query-analyzer-id:de</task>
        <code>doc("/db/lucene/text.xml")//l[ft:query(., 'herzen', map { "query-analyzer-id": "de" })]</code>
        <expected>
            <l n="l1.12">Das will mir schier das Herz verbrennen.</l>
        </expected>
    </test>
    <test output="xml">
        <task>&lt;query-analyzer-id&gt;keyword&lt;...</task>
        <code>doc("/db/lucene/text.xml")//l[ft:query(., 'herzen',
            &lt;options&gt;&lt;query-analyzer-id&gt;keyword&lt;/query-analyzer-id&gt;&lt;/options&gt;
                                                    )]
        </code>
        <expected/>
    </test>
    <test output="xml">
        <task>query-analyzer-id:keyword</task>
        <code>doc("/db/lucene/text.xml")//l[ft:query(., 'herzen', map { "query-analyzer-id": "keyword" })]</code>
        <expected/>
    </test>
    <test output="xml">
        <task>query new field "l_no-stop" with the GermanAnalyzer without stopwords</task>
        <code>doc("/db/lucene/text.xml")//l[ft:query(., 'l_nostop:(ich OR bin)')]</code>
        <expected>
            <l n="l1.5">Da steh ich nun, ich armer Tor!</l>
            <l n="l1.6">Und bin so klug als wie zuvor;</l>
        </expected>
    </test>
    <test output="xml">
        <task>query new field "l_no-stop" with the default GermanAnalyzer</task>
        <code>doc("/db/lucene/text.xml")//l[ft:query(., 'l_nostop:(ich OR bin)', map { "query-analyzer-id": "de" })]</code>
        <expected />
    </test>
    <test output="xml">
        <task>query new field "l_ws" with the WhitespaceAnalyzer - no result</task>
        <code>doc("/db/lucene/text.xml")//l[ft:query(., "l_ws:(nun\!)")]</code>
        <expected />
    </test>
    <test output="xml">
        <task>query new field "l_ws" with GermanAnalyzer</task>
        <code>doc("/db/lucene/text.xml")//l[ft:query(., "l_ws:(nun\!)", map { "query-analyzer-id": "de" })]</code>
        <expected />
    </test>
    <test output="xml">
        <task>query new field "l_ws" with the WhitespaceAnalyzer - 2 results</task>
        <code>doc("/db/lucene/text.xml")//l[ft:query(., "l_ws:(nun,)")]</code>
        <expected>
            <l n="l1.1">Habe nun, ach! Philosophie,</l>
            <l n="l1.5">Da steh ich nun, ich armer Tor!</l> 
        </expected>
    </test>
    <test output="xml">
        <task>query new field "l_ws" with the GermanAnalyzer - still no results</task>
        <code>doc("/db/lucene/text.xml")//l[ft:query(., "l_ws:(nun,)", map { "query-analyzer-id": "de" })]</code>
        <expected />
    </test>
    <test output="xml">
        <task>query new field "l_ws" with the GermanAnalyzer and wildcard - 2 results</task>
        <code>doc("/db/lucene/text.xml")//l[ft:query(., "l_ws:(nun*)", map { "query-analyzer-id": "de" })]</code>
        <expected>
            <l n="l1.1">Habe nun, ach! Philosophie,</l>
            <l n="l1.5">Da steh ich nun, ich armer Tor!</l>
        </expected>
    </test>
    <test output="xml">
        <task>Query field with standard analyzer, no match</task>
        <code>ft:query-field("line", "herzen")</code>
        <expected/>
    </test>
    <test output="xml">
        <task>Query field with query analyzer overridden (options as map)</task>
        <code>ft:query-field("line", "herzen", map { "query-analyzer-id": "de" })</code>
        <expected>
            <l n="l1.12">Das will mir schier das Herz verbrennen.</l>
        </expected>
    </test>
    <test output="xml">
        <task>Query field with query analyzer overridden (options as xml)</task>
        <code>ft:query-field("line", "herzen",
                &lt;options&gt;&lt;query-analyzer-id&gt;de&lt;/query-analyzer-id&gt;&lt;/options&gt;
                            )
        </code>
        <expected>
            <l n="l1.12">Das will mir schier das Herz verbrennen.</l>
        </expected>
    </test>
    <test output="xml">
        <task>Query field with standard analyzer and without context</task>
        <code>ft:query-field("line", 'klug')</code>
        <expected>
            <l n="l1.6">Und bin so klug als wie zuvor;</l>
        </expected>
    </test>
    <test output="xml">
        <task>Query field with keyword analyzer, no match</task>
        <code>ft:query-field("lineno", "10")</code>
        <expected/>
    </test>
    <test output="xml">
        <task>Query field with keyword analyzer and without context</task>
        <code><![CDATA[ft:query-field("lineno", "l1.10")/..]]></code>
        <expected>
            <l n="l1.10">Meine Schüler an der Nase herum –</l>
        </expected>
    </test>
    <test output="xml">
        <task>Query field with keyword analyzer and context</task>
        <code>doc("/db/lucene/text.xml")//l[ft:query-field("lineno", "l1.10")]</code>
        <expected>
            <l n="l1.10">Meine Schüler an der Nase herum –</l>
        </expected>
    </test>
</TestSet>
